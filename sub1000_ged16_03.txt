ex
ex
subGraph 하나에 대한 특징 추출 시간  :  0.003270387649536133
tensor([[ 0.0886,  0.0753, -0.5501,  0.5521],
        [ 0.0875,  0.0748, -0.5516,  0.5548],
        [ 0.1059,  0.0639, -0.8196,  0.8037],
        ...,
        [ 0.0876,  0.0745, -0.5597,  0.5627],
        [ 0.0875,  0.0747, -0.5526,  0.5558],
        [ 0.0875,  0.0747, -0.5535,  0.5568]], device='cuda:0')
torch.Size([2468, 4])
Q graph nodes : {'car', 'road', 'traffic_light', 'vehicle'}
number of DB subgraph torch.Size([2468])
DB img id : 17
similarity : 0.00000
DB graph nodes : {'sign_wall', 'wood', 'mouse', 'wheel'}
DB img id : 80
similarity : 0.00000
DB graph nodes : {'floor', 'utensil'}
DB img id : 89
similarity : 0.00000
DB graph nodes : {'cabinet', 'shelf', 'lamp'}
DB img id : 97
similarity : 0.00000
DB graph nodes : {'eyelid', 'magazine', 'knife', 'bag'}
DB img id : 15
similarity : 0.00090
DB graph nodes : {'desk', 'corner', 'paper', 'newspaper'}
@@@@@@@@@@@@@@@@@retreival_time@@@@@@@@@@@@@@@@@ : 0.3944368362426758
Counter({0: 2308, 1: 126, 2: 33, 3: 1})
Counter({'set()': 2308, "{'car'}": 91, "{'road'}": 27, "{'car', 'road'}": 24, "{'car', 'traffic_light'}": 7, "{'vehicle'}": 6, "{'road', 'vehicle'}": 2, "{'traffic_light'}": 2, "{'car', 'road', 'vehicle'}": 1})
============================================================
subGraph 하나에 대한 특징 추출 시간  :  0.003255128860473633
tensor([[ 0.0886,  0.0753, -0.5501,  0.5521],
        [ 0.0875,  0.0748, -0.5516,  0.5548],
        [ 0.1059,  0.0639, -0.8196,  0.8037],
        ...,
        [ 0.0876,  0.0745, -0.5597,  0.5627],
        [ 0.0875,  0.0747, -0.5526,  0.5558],
        [ 0.0875,  0.0747, -0.5535,  0.5568]], device='cuda:0')
torch.Size([2468, 4])
Q graph nodes : {'car', 'road', 'traffic_light', 'vehicle'}
number of DB subgraph torch.Size([2468])
DB img id : 8
similarity : 0.00000
DB graph nodes : {'dish', 'cup', 'wall', 'desk'}
DB img id : 40
similarity : 0.00000
DB graph nodes : {'table', 'picture', 'shelf', 'flower'}
DB img id : 72
similarity : 0.00000
DB graph nodes : {'head', 'man', 'shirt', 'glass'}
DB img id : 9
similarity : 0.00093
DB graph nodes : {'desk', 'book', 'mouse_pad', 'window'}
DB img id : 35
similarity : 0.00093
DB graph nodes : {'desk', 'computer', 'office'}
@@@@@@@@@@@@@@@@@retreival_time@@@@@@@@@@@@@@@@@ : 0.39305973052978516
Counter({0: 2308, 1: 126, 2: 33, 3: 1})
Counter({'set()': 2308, "{'car'}": 91, "{'road'}": 27, "{'car', 'road'}": 24, "{'car', 'traffic_light'}": 7, "{'vehicle'}": 6, "{'road', 'vehicle'}": 2, "{'traffic_light'}": 2, "{'car', 'road', 'vehicle'}": 1})
============================================================
subGraph 하나에 대한 특징 추출 시간  :  0.0032329559326171875
tensor([[ 0.0886,  0.0753, -0.5501,  0.5521],
        [ 0.0875,  0.0748, -0.5516,  0.5548],
        [ 0.1059,  0.0639, -0.8196,  0.8037],
        ...,
        [ 0.0876,  0.0745, -0.5597,  0.5627],
        [ 0.0875,  0.0747, -0.5526,  0.5558],
        [ 0.0875,  0.0747, -0.5535,  0.5568]], device='cuda:0')
torch.Size([2468, 4])
Q graph nodes : {'car', 'road', 'traffic_light'}
number of DB subgraph torch.Size([2468])
DB img id : 88
similarity : 0.00129
DB graph nodes : {'book', 'pillow', 'bookshelf'}
DB img id : 53
similarity : 0.00139
DB graph nodes : {'new_jersey', 'light', 'person'}
DB img id : 31
similarity : 0.00178
DB graph nodes : {'oven', 'plant', 'flower'}
DB img id : 30
similarity : 0.00210
DB graph nodes : {'cabinet', 'baggage', 'bag'}
DB img id : 57
similarity : 0.00214
DB graph nodes : {'car', 'street', 'person'}
@@@@@@@@@@@@@@@@@retreival_time@@@@@@@@@@@@@@@@@ : 0.46497654914855957
Counter({0: 2314, 1: 122, 2: 32})
Counter({'set()': 2314, "{'car'}": 91, "{'road'}": 29, "{'car', 'road'}": 25, "{'car', 'traffic_light'}": 7, "{'traffic_light'}": 2})
============================================================
subGraph 하나에 대한 특징 추출 시간  :  0.0035774707794189453
tensor([[ 0.0886,  0.0753, -0.5501,  0.5521],
        [ 0.0875,  0.0748, -0.5516,  0.5548],
        [ 0.1059,  0.0639, -0.8196,  0.8037],
        ...,
        [ 0.0876,  0.0745, -0.5597,  0.5627],
        [ 0.0875,  0.0747, -0.5526,  0.5558],
        [ 0.0875,  0.0747, -0.5535,  0.5568]], device='cuda:0')
torch.Size([2468, 4])
Q graph nodes : {'car', 'vehicle', 'road', 'traffic_light'}
number of DB subgraph torch.Size([2468])
DB img id : 1
similarity : 0.00000
DB graph nodes : {'headlight', 'shade', 'man'}
DB img id : 5
similarity : 0.00000
DB graph nodes : {'shelf', 'chair', 'floor', 'computer'}
DB img id : 11
similarity : 0.00000
DB graph nodes : {'desk', 'keyboard', 'computer', 'chair'}
DB img id : 62
similarity : 0.00000
DB graph nodes : {'building', 'balcony', 'shadow', 'sidewalk'}
DB img id : 66
similarity : 0.00000
DB graph nodes : {'hinge', 'shelf', 'videodisk'}
@@@@@@@@@@@@@@@@@retreival_time@@@@@@@@@@@@@@@@@ : 0.39415740966796875
Counter({0: 2308, 1: 126, 2: 33, 3: 1})
Counter({'set()': 2308, "{'car'}": 91, "{'road'}": 27, "{'car', 'road'}": 24, "{'car', 'traffic_light'}": 7, "{'vehicle'}": 6, "{'vehicle', 'road'}": 2, "{'traffic_light'}": 2, "{'car', 'vehicle', 'road'}": 1})
============================================================
Counter({17: 1, 80: 1, 89: 1, 97: 1, 15: 1, 8: 1, 40: 1, 72: 1, 9: 1, 35: 1, 88: 1, 53: 1, 31: 1, 30: 1, 57: 1, 1: 1, 5: 1, 11: 1, 62: 1, 66: 1})
