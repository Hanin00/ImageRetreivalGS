ex
ex
subGraph 하나에 대한 특징 추출 시간  :  0.003307819366455078
tensor([[-0.0160, -0.0983,  0.8136,  1.0757],
        [-0.0145, -0.0979,  0.8980,  1.1607],
        [-0.0126, -0.0969,  0.7890,  1.0555],
        ...,
        [-0.0147, -0.0980,  0.8852,  1.1479],
        [-0.0146, -0.0979,  0.8958,  1.1585],
        [-0.0145, -0.0979,  0.8941,  1.1567]], device='cuda:0')
torch.Size([2468, 4])
Q graph nodes : {'traffic_light', 'car', 'vehicle', 'road'}
number of DB subgraph torch.Size([2468])
DB img id : 49
similarity : 0.00110
DB graph nodes : {'coat', 'bag', 'woman', 'jacket'}
DB img id : 3
similarity : 0.00130
DB graph nodes : {'cable', 'desk', 'keyboard', 'cabinet'}
DB img id : 60
similarity : 0.00154
DB graph nodes : {'grate', 'license_plate', 'pole', 'seat'}
DB img id : 4
similarity : 0.00157
DB graph nodes : {'chair', 'pillow', 'rug', 'door'}
DB img id : 3
similarity : 0.00190
DB graph nodes : {'telephone', 'computer', 'necklace', 'central_processing_unit'}
@@@@@@@@@@@@@@@@@retreival_time@@@@@@@@@@@@@@@@@ : 0.40691065788269043
Counter({0: 2308, 1: 126, 2: 33, 3: 1})
Counter({'set()': 2308, "{'car'}": 91, "{'road'}": 27, "{'car', 'road'}": 24, "{'traffic_light', 'car'}": 7, "{'vehicle'}": 6, "{'vehicle', 'road'}": 2, "{'traffic_light'}": 2, "{'car', 'vehicle', 'road'}": 1})
============================================================
subGraph 하나에 대한 특징 추출 시간  :  0.0032732486724853516
tensor([[-0.0160, -0.0983,  0.8136,  1.0757],
        [-0.0145, -0.0979,  0.8980,  1.1607],
        [-0.0126, -0.0969,  0.7890,  1.0555],
        ...,
        [-0.0147, -0.0980,  0.8852,  1.1479],
        [-0.0146, -0.0979,  0.8958,  1.1585],
        [-0.0145, -0.0979,  0.8941,  1.1567]], device='cuda:0')
torch.Size([2468, 4])
Q graph nodes : {'traffic_light', 'car', 'vehicle', 'road'}
number of DB subgraph torch.Size([2468])
DB img id : 24
similarity : 0.00026
DB graph nodes : {'street', 'road', 'man', 'something'}
DB img id : 32
similarity : 0.00076
DB graph nodes : {'switch', 'sink', 'faucet', 'counter', 'cup'}
DB img id : 33
similarity : 0.00093
DB graph nodes : {'fireplace', 'table', 'floor', 'spectacles'}
DB img id : 3
similarity : 0.00149
DB graph nodes : {'mercantile_establishment', 'plug', 'central_processing_unit'}
DB img id : 88
similarity : 0.00159
DB graph nodes : {'table', 'shade', 'lamp', 'window'}
@@@@@@@@@@@@@@@@@retreival_time@@@@@@@@@@@@@@@@@ : 0.40201234817504883
Counter({0: 2308, 1: 126, 2: 33, 3: 1})
Counter({'set()': 2308, "{'car'}": 91, "{'road'}": 27, "{'car', 'road'}": 24, "{'traffic_light', 'car'}": 7, "{'vehicle'}": 6, "{'vehicle', 'road'}": 2, "{'traffic_light'}": 2, "{'car', 'vehicle', 'road'}": 1})
============================================================
subGraph 하나에 대한 특징 추출 시간  :  0.003432750701904297
tensor([[-0.0160, -0.0983,  0.8136,  1.0757],
        [-0.0145, -0.0979,  0.8980,  1.1607],
        [-0.0126, -0.0969,  0.7890,  1.0555],
        ...,
        [-0.0147, -0.0980,  0.8852,  1.1479],
        [-0.0146, -0.0979,  0.8958,  1.1585],
        [-0.0145, -0.0979,  0.8941,  1.1567]], device='cuda:0')
torch.Size([2468, 4])
Q graph nodes : {'traffic_light', 'car', 'road'}
number of DB subgraph torch.Size([2468])
DB img id : 34
similarity : 0.00039
DB graph nodes : {'printer', 'table', 'painting'}
DB img id : 21
similarity : 0.00247
DB graph nodes : {'watch', 'arm', 'hand', 'girl'}
DB img id : 9
similarity : 0.00304
DB graph nodes : {'corkboard', 'room', 'computer', 'tube'}
DB img id : 53
similarity : 0.00312
DB graph nodes : {'traffic_light', 'window', 'building', 'street'}
DB img id : 41
similarity : 0.00366
DB graph nodes : {'tin', 'toaster_oven', 'microwave', 'tile'}
@@@@@@@@@@@@@@@@@retreival_time@@@@@@@@@@@@@@@@@ : 0.48547911643981934
Counter({0: 2314, 1: 122, 2: 32})
Counter({'set()': 2314, "{'car'}": 91, "{'road'}": 29, "{'car', 'road'}": 25, "{'traffic_light', 'car'}": 7, "{'traffic_light'}": 2})
============================================================
subGraph 하나에 대한 특징 추출 시간  :  0.0036628246307373047
tensor([[-0.0160, -0.0983,  0.8136,  1.0757],
        [-0.0145, -0.0979,  0.8980,  1.1607],
        [-0.0126, -0.0969,  0.7890,  1.0555],
        ...,
        [-0.0147, -0.0980,  0.8852,  1.1479],
        [-0.0146, -0.0979,  0.8958,  1.1585],
        [-0.0145, -0.0979,  0.8941,  1.1567]], device='cuda:0')
torch.Size([2468, 4])
Q graph nodes : {'traffic_light', 'car', 'vehicle', 'road'}
number of DB subgraph torch.Size([2468])
DB img id : 10
similarity : 0.00065
DB graph nodes : {'paper', 'desk', 'coat', 'chair'}
DB img id : 38
similarity : 0.00118
DB graph nodes : {'shadow', 'table', 'pot', 'plate'}
DB img id : 29
similarity : 0.00139
DB graph nodes : {'woman', 'house', 'beach'}
DB img id : 32
similarity : 0.00146
DB graph nodes : {'sink', 'switch', 'counter', 'cup'}
DB img id : 15
similarity : 0.00154
DB graph nodes : {'desk', 'paper', 'corner', 'newspaper'}
@@@@@@@@@@@@@@@@@retreival_time@@@@@@@@@@@@@@@@@ : 0.4060206413269043
Counter({0: 2308, 1: 126, 2: 33, 3: 1})
Counter({'set()': 2308, "{'car'}": 91, "{'road'}": 27, "{'car', 'road'}": 24, "{'traffic_light', 'car'}": 7, "{'vehicle'}": 6, "{'vehicle', 'road'}": 2, "{'traffic_light'}": 2, "{'car', 'vehicle', 'road'}": 1})
============================================================
Counter({3: 3, 32: 2, 49: 1, 60: 1, 4: 1, 24: 1, 33: 1, 88: 1, 34: 1, 21: 1, 9: 1, 53: 1, 41: 1, 10: 1, 38: 1, 29: 1, 15: 1})
