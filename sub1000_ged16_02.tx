ex
ex
subGraph 하나에 대한 특징 추출 시간  :  0.0033385753631591797
tensor([[ 0.0886,  0.0753, -0.5501,  0.5521],
        [ 0.0875,  0.0748, -0.5516,  0.5548],
        [ 0.1059,  0.0639, -0.8196,  0.8037],
        ...,
        [ 0.0876,  0.0745, -0.5597,  0.5627],
        [ 0.0875,  0.0747, -0.5526,  0.5558],
        [ 0.0875,  0.0747, -0.5535,  0.5568]], device='cuda:0')
torch.Size([2468, 4])
Q graph nodes : {'car', 'road', 'vehicle', 'traffic_light'}
number of DB subgraph torch.Size([2468])
DB img id : 17
similarity : 0.00000
DB graph nodes : {'mouse', 'wood', 'sign_wall', 'wheel'}
DB img id : 80
similarity : 0.00000
DB graph nodes : {'utensil', 'floor'}
DB img id : 89
similarity : 0.00000
DB graph nodes : {'shelf', 'cabinet', 'lamp'}
DB img id : 97
similarity : 0.00000
DB graph nodes : {'eyelid', 'bag', 'magazine', 'knife'}
DB img id : 15
similarity : 0.00090
DB graph nodes : {'desk', 'newspaper', 'corner', 'paper'}
@@@@@@@@@@@@@@@@@retreival_time@@@@@@@@@@@@@@@@@ : 0.4121105670928955
Counter({0: 2308, 1: 126, 2: 33, 3: 1})
Counter({'set()': 2308, "{'car'}": 91, "{'road'}": 27, "{'road', 'car'}": 24, "{'car', 'traffic_light'}": 7, "{'vehicle'}": 6, "{'road', 'vehicle'}": 2, "{'traffic_light'}": 2, "{'road', 'car', 'vehicle'}": 1})
============================================================
subGraph 하나에 대한 특징 추출 시간  :  0.003557920455932617
tensor([[ 0.0886,  0.0753, -0.5501,  0.5521],
        [ 0.0875,  0.0748, -0.5516,  0.5548],
        [ 0.1059,  0.0639, -0.8196,  0.8037],
        ...,
        [ 0.0876,  0.0745, -0.5597,  0.5627],
        [ 0.0875,  0.0747, -0.5526,  0.5558],
        [ 0.0875,  0.0747, -0.5535,  0.5568]], device='cuda:0')
torch.Size([2468, 4])
Q graph nodes : {'road', 'car', 'vehicle', 'traffic_light'}
number of DB subgraph torch.Size([2468])
DB img id : 8
similarity : 0.00000
DB graph nodes : {'desk', 'cup', 'dish', 'wall'}
DB img id : 40
similarity : 0.00000
DB graph nodes : {'table', 'picture', 'shelf', 'flower'}
DB img id : 72
similarity : 0.00000
DB graph nodes : {'head', 'glass', 'man', 'shirt'}
DB img id : 9
similarity : 0.00093
DB graph nodes : {'desk', 'book', 'window', 'mouse_pad'}
DB img id : 35
similarity : 0.00093
DB graph nodes : {'desk', 'office', 'computer'}
@@@@@@@@@@@@@@@@@retreival_time@@@@@@@@@@@@@@@@@ : 0.4103233814239502
Counter({0: 2308, 1: 126, 2: 33, 3: 1})
Counter({'set()': 2308, "{'car'}": 91, "{'road'}": 27, "{'car', 'road'}": 24, "{'car', 'traffic_light'}": 7, "{'vehicle'}": 6, "{'road', 'vehicle'}": 2, "{'traffic_light'}": 2, "{'car', 'road', 'vehicle'}": 1})
============================================================
subGraph 하나에 대한 특징 추출 시간  :  0.0033042430877685547
tensor([[ 0.0886,  0.0753, -0.5501,  0.5521],
        [ 0.0875,  0.0748, -0.5516,  0.5548],
        [ 0.1059,  0.0639, -0.8196,  0.8037],
        ...,
        [ 0.0876,  0.0745, -0.5597,  0.5627],
        [ 0.0875,  0.0747, -0.5526,  0.5558],
        [ 0.0875,  0.0747, -0.5535,  0.5568]], device='cuda:0')
torch.Size([2468, 4])
Q graph nodes : {'car', 'road', 'traffic_light'}
number of DB subgraph torch.Size([2468])
DB img id : 88
similarity : 0.00129
DB graph nodes : {'bookshelf', 'book', 'pillow'}
DB img id : 53
similarity : 0.00139
DB graph nodes : {'new_jersey', 'light', 'person'}
DB img id : 31
similarity : 0.00178
DB graph nodes : {'oven', 'plant', 'flower'}
DB img id : 30
similarity : 0.00210
DB graph nodes : {'baggage', 'bag', 'cabinet'}
DB img id : 57
similarity : 0.00214
DB graph nodes : {'street', 'car', 'person'}
@@@@@@@@@@@@@@@@@retreival_time@@@@@@@@@@@@@@@@@ : 0.4828767776489258
Counter({0: 2314, 1: 122, 2: 32})
Counter({'set()': 2314, "{'car'}": 91, "{'road'}": 29, "{'road', 'car'}": 25, "{'car', 'traffic_light'}": 7, "{'traffic_light'}": 2})
============================================================
subGraph 하나에 대한 특징 추출 시간  :  0.003595113754272461
tensor([[ 0.0886,  0.0753, -0.5501,  0.5521],
        [ 0.0875,  0.0748, -0.5516,  0.5548],
        [ 0.1059,  0.0639, -0.8196,  0.8037],
        ...,
        [ 0.0876,  0.0745, -0.5597,  0.5627],
        [ 0.0875,  0.0747, -0.5526,  0.5558],
        [ 0.0875,  0.0747, -0.5535,  0.5568]], device='cuda:0')
torch.Size([2468, 4])
Q graph nodes : {'car', 'road', 'vehicle', 'traffic_light'}
number of DB subgraph torch.Size([2468])
DB img id : 1
similarity : 0.00000
DB graph nodes : {'man', 'shade', 'headlight'}
DB img id : 5
similarity : 0.00000
DB graph nodes : {'computer', 'chair', 'shelf', 'floor'}
DB img id : 11
similarity : 0.00000
DB graph nodes : {'desk', 'keyboard', 'chair', 'computer'}
DB img id : 62
similarity : 0.00000
DB graph nodes : {'sidewalk', 'building', 'balcony', 'shadow'}
DB img id : 66
similarity : 0.00000
DB graph nodes : {'videodisk', 'shelf', 'hinge'}
@@@@@@@@@@@@@@@@@retreival_time@@@@@@@@@@@@@@@@@ : 0.4103827476501465
Counter({0: 2308, 1: 126, 2: 33, 3: 1})
Counter({'set()': 2308, "{'car'}": 91, "{'road'}": 27, "{'road', 'car'}": 24, "{'car', 'traffic_light'}": 7, "{'vehicle'}": 6, "{'road', 'vehicle'}": 2, "{'traffic_light'}": 2, "{'road', 'car', 'vehicle'}": 1})
============================================================
Counter({17: 1, 80: 1, 89: 1, 97: 1, 15: 1, 8: 1, 40: 1, 72: 1, 9: 1, 35: 1, 88: 1, 53: 1, 31: 1, 30: 1, 57: 1, 1: 1, 5: 1, 11: 1, 62: 1, 66: 1})
