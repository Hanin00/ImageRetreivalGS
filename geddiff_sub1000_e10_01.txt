ex
ex
subGraph 하나에 대한 특징 추출 시간  :  0.0035033226013183594
tensor([[-0.0850,  0.1037,  0.4519, -0.0031],
        [-0.0849,  0.1038,  0.4515, -0.0030],
        [-0.0948,  0.1038,  0.5952,  0.1112],
        ...,
        [-0.0851,  0.1038,  0.4522, -0.0022],
        [-0.0849,  0.1038,  0.4519, -0.0026],
        [-0.0850,  0.1039,  0.4517, -0.0028]], device='cuda:0')
torch.Size([2468, 4])
Q graph nodes : {'car', 'traffic_light', 'vehicle', 'road'}
number of DB subgraph torch.Size([2468])
DB img id : 20
similarity : 0.00043
DB graph nodes : {'keyboard', 'book', 'bookshelf'}
DB img id : 7
similarity : 0.00053
DB graph nodes : {'desk', 'hair', 'telephone', 'jean'}
DB img id : 98
similarity : 0.00055
DB graph nodes : {'water', 'cardboard', 'spatula', 'cup'}
DB img id : 14
similarity : 0.00069
DB graph nodes : {'lamp', 'bottle', 'computer_monitor', 'shade'}
DB img id : 22
similarity : 0.00071
DB graph nodes : {'car', 'window', 'grass', 'road'}
@@@@@@@@@@@@@@@@@retreival_time@@@@@@@@@@@@@@@@@ : 0.41620779037475586
Counter({0: 2308, 1: 126, 2: 33, 3: 1})
Counter({'set()': 2308, "{'car'}": 91, "{'road'}": 27, "{'car', 'road'}": 24, "{'car', 'traffic_light'}": 7, "{'vehicle'}": 6, "{'vehicle', 'road'}": 2, "{'traffic_light'}": 2, "{'car', 'vehicle', 'road'}": 1})
============================================================
subGraph 하나에 대한 특징 추출 시간  :  0.003493070602416992
tensor([[-0.0850,  0.1037,  0.4519, -0.0031],
        [-0.0849,  0.1038,  0.4515, -0.0030],
        [-0.0948,  0.1038,  0.5952,  0.1112],
        ...,
        [-0.0851,  0.1038,  0.4522, -0.0022],
        [-0.0849,  0.1038,  0.4519, -0.0026],
        [-0.0850,  0.1039,  0.4517, -0.0028]], device='cuda:0')
torch.Size([2468, 4])
Q graph nodes : {'car', 'traffic_light', 'vehicle', 'road'}
number of DB subgraph torch.Size([2468])
DB img id : 70
similarity : 0.00033
DB graph nodes : {'line', 'painting', 'chair', 'man'}
DB img id : 7
similarity : 0.00037
DB graph nodes : {'calculator', 'book', 'monitor', 'wrist'}
DB img id : 53
similarity : 0.00040
DB graph nodes : {'car', 'building', 'traffic_light', 'bicycle'}
DB img id : 54
similarity : 0.00049
DB graph nodes : {'car', 'leg', 'head', 'fence'}
DB img id : 8
similarity : 0.00051
DB graph nodes : {'desk', 'dish', 'wall', 'cup'}
@@@@@@@@@@@@@@@@@retreival_time@@@@@@@@@@@@@@@@@ : 0.41505861282348633
Counter({0: 2308, 1: 126, 2: 33, 3: 1})
Counter({'set()': 2308, "{'car'}": 91, "{'road'}": 27, "{'car', 'road'}": 24, "{'car', 'traffic_light'}": 7, "{'vehicle'}": 6, "{'vehicle', 'road'}": 2, "{'traffic_light'}": 2, "{'car', 'vehicle', 'road'}": 1})
============================================================
subGraph 하나에 대한 특징 추출 시간  :  0.003484964370727539
tensor([[-0.0850,  0.1037,  0.4519, -0.0031],
        [-0.0849,  0.1038,  0.4515, -0.0030],
        [-0.0948,  0.1038,  0.5952,  0.1112],
        ...,
        [-0.0851,  0.1038,  0.4522, -0.0022],
        [-0.0849,  0.1038,  0.4519, -0.0026],
        [-0.0850,  0.1039,  0.4517, -0.0028]], device='cuda:0')
torch.Size([2468, 4])
Q graph nodes : {'car', 'road', 'traffic_light'}
number of DB subgraph torch.Size([2468])
DB img id : 4
similarity : 0.00016
DB graph nodes : {'sofa', 'window', 'fabric'}
DB img id : 73
similarity : 0.00036
DB graph nodes : {'table', 'silverware', 'man'}
DB img id : 98
similarity : 0.00048
DB graph nodes : {'pizza_slice', 'plate', 'shaker'}
DB img id : 72
similarity : 0.00050
DB graph nodes : {'woman', 'man', 'table'}
DB img id : 8
similarity : 0.00051
DB graph nodes : {'keyboard', 'drawer', 'paper'}
@@@@@@@@@@@@@@@@@retreival_time@@@@@@@@@@@@@@@@@ : 0.512761116027832
Counter({0: 2314, 1: 122, 2: 32})
Counter({'set()': 2314, "{'car'}": 91, "{'road'}": 29, "{'car', 'road'}": 25, "{'car', 'traffic_light'}": 7, "{'traffic_light'}": 2})
============================================================
subGraph 하나에 대한 특징 추출 시간  :  0.0037560462951660156
tensor([[-0.0850,  0.1037,  0.4519, -0.0031],
        [-0.0849,  0.1038,  0.4515, -0.0030],
        [-0.0948,  0.1038,  0.5952,  0.1112],
        ...,
        [-0.0851,  0.1038,  0.4522, -0.0022],
        [-0.0849,  0.1038,  0.4519, -0.0026],
        [-0.0850,  0.1039,  0.4517, -0.0028]], device='cuda:0')
torch.Size([2468, 4])
Q graph nodes : {'car', 'traffic_light', 'vehicle', 'road'}
number of DB subgraph torch.Size([2468])
DB img id : 34
similarity : 0.00018
DB graph nodes : {'picture', 'frame', 'chair', 'computer'}
DB img id : 10
similarity : 0.00033
DB graph nodes : {'desk', 'central_processing_unit', 'earphone', 'picture_frame'}
DB img id : 40
similarity : 0.00041
DB graph nodes : {'picture', 'flower', 'shelf', 'table'}
DB img id : 16
similarity : 0.00049
DB graph nodes : {'people', 'sidewalk', 'man', 'male_child'}
DB img id : 28
similarity : 0.00061
DB graph nodes : {'basket', 'picture', 'frame', 'book'}
@@@@@@@@@@@@@@@@@retreival_time@@@@@@@@@@@@@@@@@ : 0.4146885871887207
Counter({0: 2308, 1: 126, 2: 33, 3: 1})
Counter({'set()': 2308, "{'car'}": 91, "{'road'}": 27, "{'car', 'road'}": 24, "{'car', 'traffic_light'}": 7, "{'vehicle'}": 6, "{'vehicle', 'road'}": 2, "{'traffic_light'}": 2, "{'car', 'vehicle', 'road'}": 1})
============================================================
Counter({7: 2, 98: 2, 8: 2, 20: 1, 14: 1, 22: 1, 70: 1, 53: 1, 54: 1, 4: 1, 73: 1, 72: 1, 34: 1, 10: 1, 40: 1, 16: 1, 28: 1})
